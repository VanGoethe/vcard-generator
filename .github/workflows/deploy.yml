name: Deploy-application

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  check_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: Run lint fix
        run: npm run lint
  
  run_tests:
    runs-on: ubuntu-latest
    needs: [check_lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci
      
      # - name: Run tests
      #   run: npm run test

  # deploy_to_vercel:
  #   runs-on: ubuntu-latest
  #   needs: [check_lint, run_tests]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
      
  #     - name: Vercel Action
  #       uses:  VanGoethe/vcard-generator
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         vercel-org-id: ${{ secrets.ORG_ID}}
  #         vercel-project-id: ${{ secrets.PROJECT_ID}}
  #         vercel-args: '--prod'              
      - name: Deploy to Server
        if: ${{ success() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PEM }}
          script_stop: true
          script: |
            cd /var/www/html
            cd immap-website-frontend
            sudo git stash
            sudo git pull
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh 
            npm install
            npm run build
            pm2 restart website
            pm2 status